--- vboxadd.sh.orig	2017-04-28 21:59:23.000000000 +0700
+++ vboxadd.sh	2017-07-14 13:48:11.431415920 +0700
@@ -108,7 +108,6 @@
 
 dev=/dev/vboxguest
 userdev=/dev/vboxuser
-config=/var/lib/VBoxGuestAdditions/config
 owner=vboxadd
 group=1
 
@@ -442,50 +441,13 @@
 # setup_script
 setup()
 {
-    export BUILD_TYPE
-    export USERNAME
-
-    rm -f $LOG
-    MODULE_SRC="$INSTALL_DIR/src/vboxguest-$INSTALL_VER"
-    BUILDINTMP="$MODULE_SRC/build_in_tmp"
-    chcon -t bin_t "$BUILDINTMP" > /dev/null 2>&1
-
-    test -z "${INSTALL_NO_MODULE_BUILDS}" && setup_modules
-    create_vbox_user
-    create_udev_rule
-    test -z "${INSTALL_NO_MODULE_BUILDS}" && create_module_rebuild_script
-    test -n "${QUICKSETUP}" && return 0
-    shared_folder_setup
-    if  running_vboxguest || running_vboxadd; then
-        begin "Running kernel modules will not be replaced until the system is restarted"
-    fi
-    return 0
+  echo "Not implemented! Please use the virtualbox-kernel-addons.SlackBuild available at SlackBuilds.org instead."
 }
 
 # cleanup_script
 cleanup()
 {
-    if test -z "${INSTALL_NO_MODULE_BUILDS}"; then
-        # Delete old versions of VBox modules.
-        cleanup_modules
-        depmod
-
-        # Remove old module sources
-        for i in $OLDMODULES; do
-          rm -rf /usr/src/$i-*
-        done
-    fi
-
-    # Clean-up X11-related bits
-    ${INSTALL_DIR}/init/vboxadd-x11 cleanup
-
-    # Remove other files
-    rm /sbin/mount.vboxsf 2>/dev/null
-    if test -z "${INSTALL_NO_MODULE_BUILDS}"; then
-        rm -f /etc/kernel/postinst.d/vboxadd /etc/kernel/prerm.d/vboxadd
-        rmdir -p /etc/kernel/postinst.d /etc/kernel/prerm.d 2>/dev/null
-    fi
-    rm /etc/udev/rules.d/60-vboxadd.rules 2>/dev/null
+  echo "Not implemented! Please use removepkg or pkgtool to remove virtualbox-addons and/or virtualbox-kernel-addons instead."
 }
 
 dmnstatus()
